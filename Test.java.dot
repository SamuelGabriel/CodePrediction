digraph {
 rankdir=LR;
 subgraph {
  rank=same;
0 [ label="COMPILATION_UNIT" ];

 }
 subgraph {
  rank=same;
5 [ label="TYPE_DECLS" ];

1 [ label="PACKAGE" ];

 }
 subgraph {
  rank=same;
6 [ label="CLASS" ];

2 [ label="PACKAGE" ];

 }
 subgraph {
  rank=same;
9 [ label="MEMBERS" ];

7 [ label="MODIFIERS" ];

3 [ label="PACKAGE_NAME" ];

 }
 subgraph {
  rank=same;
19 [ label="METHOD" ];

10 [ label="BLOCK" ];

8 [ label="MODIFIERS" ];

 }
 subgraph {
  rank=same;
22 [ label="RETURN_TYPE" ];

20 [ label="MODIFIERS" ];

24 [ label="PARAMETERS" ];

30 [ label="BODY" ];

11 [ label="STATEMENTS" ];

 }
 subgraph {
  rank=same;
23 [ label="PRIMITIVE_TYPE" ];

21 [ label="MODIFIERS" ];

25 [ label="VARIABLE" ];

31 [ label="BLOCK" ];

12 [ label="VARIABLE" ];

 }
 subgraph {
  rank=same;
28 [ label="TYPE" ];

32 [ label="STATEMENTS" ];

15 [ label="TYPE" ];

17 [ label="INITIALIZER" ];

 }
 subgraph {
  rank=same;
29 [ label="PRIMITIVE_TYPE" ];

33 [ label="RETURN" ];

16 [ label="PRIMITIVE_TYPE" ];

18 [ label="INT_LITERAL" ];

 }
 subgraph {
  rank=same;
34 [ label="EXPRESSION" ];

 }
 subgraph {
 }
 subgraph {
64 [ label="hdfs.Test" ];

68 [ label="a" ];

69 [ label="pa(int)" ];

70 [ label="b" ];

71 [ label="b" ];

 }
 subgraph {
  rank=max;
36 [ label="PACKAGE" ];

37 [ label="hdfs" , color=blue];

38 [ label="SEMI" ];

39 [ label="PUBLIC" ];

40 [ label="CLASS" ];

41 [ label="Test" , color=blue];

42 [ label="LBRACE" ];

43 [ label="STATIC" ];

44 [ label="LBRACE" ];

45 [ label="int" ];

46 [ label="a" , color=blue];

47 [ label="EQ" ];

48 [ label="1" ];

49 [ label="SEMI" ];

50 [ label="RBRACE" ];

51 [ label="PUBLIC" ];

52 [ label="int" ];

53 [ label="pa" , color=blue];

54 [ label="LPAREN" ];

55 [ label="int" ];

56 [ label="b" , color=blue];

57 [ label="RPAREN" ];

58 [ label="LBRACE" ];

59 [ label="RETURN" ];

60 [ label="b" , color=blue];

61 [ label="SEMI" ];

62 [ label="RBRACE" ];

63 [ label="RBRACE" ];

 }
0 -> 1 [ headport=w, tailport=e];

1 -> 2 [ headport=w, tailport=e];

2 -> 3 [ headport=w, tailport=e];

0 -> 5 [ headport=w, tailport=e];

5 -> 6 [ headport=w, tailport=e];

6 -> 7 [ headport=w, tailport=e];

7 -> 8 [ headport=w, tailport=e];

6 -> 9 [ headport=w, tailport=e];

9 -> 10 [ headport=w, tailport=e];

10 -> 11 [ headport=w, tailport=e];

11 -> 12 [ headport=w, tailport=e];

12 -> 15 [ headport=w, tailport=e];

15 -> 16 [ headport=w, tailport=e];

12 -> 17 [ headport=w, tailport=e];

17 -> 18 [ headport=w, tailport=e];

9 -> 19 [ headport=w, tailport=e];

19 -> 20 [ headport=w, tailport=e];

20 -> 21 [ headport=w, tailport=e];

19 -> 22 [ headport=w, tailport=e];

22 -> 23 [ headport=w, tailport=e];

19 -> 24 [ headport=w, tailport=e];

24 -> 25 [ headport=w, tailport=e];

25 -> 28 [ headport=w, tailport=e];

28 -> 29 [ headport=w, tailport=e];

19 -> 30 [ headport=w, tailport=e];

30 -> 31 [ headport=w, tailport=e];

31 -> 32 [ headport=w, tailport=e];

32 -> 33 [ headport=w, tailport=e];

33 -> 34 [ headport=w, tailport=e];

36 -> 37 [ headport=n, tailport=s, weight=1000];

37 -> 38 [ headport=n, tailport=s, weight=1000];

38 -> 39 [ headport=n, tailport=s, weight=1000];

39 -> 40 [ headport=n, tailport=s, weight=1000];

40 -> 41 [ headport=n, tailport=s, weight=1000];

41 -> 42 [ headport=n, tailport=s, weight=1000];

42 -> 43 [ headport=n, tailport=s, weight=1000];

43 -> 44 [ headport=n, tailport=s, weight=1000];

44 -> 45 [ headport=n, tailport=s, weight=1000];

45 -> 46 [ headport=n, tailport=s, weight=1000];

46 -> 47 [ headport=n, tailport=s, weight=1000];

47 -> 48 [ headport=n, tailport=s, weight=1000];

48 -> 49 [ headport=n, tailport=s, weight=1000];

49 -> 50 [ headport=n, tailport=s, weight=1000];

50 -> 51 [ headport=n, tailport=s, weight=1000];

51 -> 52 [ headport=n, tailport=s, weight=1000];

52 -> 53 [ headport=n, tailport=s, weight=1000];

53 -> 54 [ headport=n, tailport=s, weight=1000];

54 -> 55 [ headport=n, tailport=s, weight=1000];

55 -> 56 [ headport=n, tailport=s, weight=1000];

56 -> 57 [ headport=n, tailport=s, weight=1000];

57 -> 58 [ headport=n, tailport=s, weight=1000];

58 -> 59 [ headport=n, tailport=s, weight=1000];

59 -> 60 [ headport=n, tailport=s, weight=1000];

60 -> 61 [ headport=n, tailport=s, weight=1000];

61 -> 62 [ headport=n, tailport=s, weight=1000];

62 -> 63 [ headport=n, tailport=s, weight=1000];

12 -> 46 [ color=blue];

25 -> 56 [ color=blue];

2 -> 36 [ ];

2 -> 38 [ ];

8 -> 39 [ ];

6 -> 40 [ ];

6 -> 41 [ color=blue];

6 -> 42 [ ];

10 -> 43 [ ];

10 -> 44 [ ];

16 -> 45 [ ];

12 -> 47 [ ];

18 -> 48 [ ];

12 -> 49 [ ];

10 -> 50 [ ];

21 -> 51 [ ];

23 -> 52 [ ];

19 -> 53 [ color=blue];

19 -> 54 [ ];

29 -> 55 [ ];

19 -> 57 [ ];

31 -> 58 [ ];

33 -> 59 [ ];

33 -> 61 [ ];

31 -> 62 [ ];

6 -> 63 [ ];

3 -> 37 [ color=blue];

34 -> 60 [ color=blue];

56 -> 60 [ headport=e, tailport=e, color=red, weight=0];

56 -> 60 [ headport=e, tailport=e, color=green, weight=0];

56 -> 60 [ headport=w, tailport=w, color=orange, weight=0];

64 -> 6 [ ];

68 -> 46 [ ];

69 -> 19 [ ];

70 -> 56 [ ];

71 -> 60 [ ];

}
