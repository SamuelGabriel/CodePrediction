digraph {
 rankdir=LR;
 subgraph {
  rank=same;
0 [ label="0:AST_ELEMENT\nCOMPILATION_UNIT\nPos:0 - 176" ];

 }
 subgraph {
  rank=same;
5 [ label="5:FAKE_AST\nIMPORTS\nPos:14 - 44" ];

1 [ label="1:FAKE_AST\nPACKAGE\nPos:0 - 13" ];

15 [ label="15:FAKE_AST\nTYPE_DECLS\nPos:46 - 176" ];

 }
 subgraph {
  rank=same;
6 [ label="6:AST_ELEMENT\nIMPORT\nPos:14 - 44" ];

2 [ label="2:AST_ELEMENT\nPACKAGE\nPos:0 - 13" ];

16 [ label="16:AST_ELEMENT\nCLASS\nPos:46 - 176" ];

 }
 subgraph {
  rank=same;
7 [ label="7:FAKE_AST\nQUALIFIED_IDENTIFIER\nPos:21 - 43" ];

3 [ label="3:FAKE_AST\nPACKAGE_NAME\nPos:8 - 12" ];

17 [ label="17:FAKE_AST\nMODIFIERS\nPos:46 - 52" ];

19 [ label="19:FAKE_AST\nMEMBERS\nPos:67 - 174" ];

 }
 subgraph {
  rank=same;
8 [ label="8:AST_ELEMENT\nMEMBER_SELECT\nPos:21 - 43" ];

18 [ label="18:AST_ELEMENT\nMODIFIERS\nPos:46 - 52" ];

20 [ label="20:AST_ELEMENT\nVARIABLE\nPos:67 - 77" ];

27 [ label="27:AST_ELEMENT\nMETHOD\nPos:79 - 174" ];

 }
 subgraph {
  rank=same;
9 [ label="9:FAKE_AST\nEXPRESSION\nPos:21 - 41" ];

23 [ label="23:FAKE_AST\nTYPE\nPos:67 - 70" ];

25 [ label="25:FAKE_AST\nINITIALIZER\nPos:75 - 76" ];

43 [ label="43:FAKE_AST\nBODY\nPos:107 - 174" ];

30 [ label="30:FAKE_AST\nRETURN_TYPE\nPos:86 - 89" ];

28 [ label="28:FAKE_AST\nMODIFIERS\nPos:79 - 85" ];

32 [ label="32:FAKE_AST\nPARAMETERS\nPos:94 - 106" ];

 }
 subgraph {
  rank=same;
10 [ label="10:AST_ELEMENT\nMEMBER_SELECT\nPos:21 - 41" ];

24 [ label="24:AST_ELEMENT\nPRIMITIVE_TYPE\nPos:67 - 70" ];

26 [ label="26:AST_ELEMENT\nINT_LITERAL\nPos:75 - 76" ];

44 [ label="44:AST_ELEMENT\nBLOCK\nPos:107 - 174" ];

31 [ label="31:AST_ELEMENT\nPRIMITIVE_TYPE\nPos:86 - 89" ];

29 [ label="29:AST_ELEMENT\nMODIFIERS\nPos:79 - 85" ];

38 [ label="38:AST_ELEMENT\nVARIABLE\nPos:101 - 106" ];

33 [ label="33:AST_ELEMENT\nVARIABLE\nPos:94 - 99" ];

 }
 subgraph {
  rank=same;
11 [ label="11:FAKE_AST\nEXPRESSION\nPos:21 - 30" ];

45 [ label="45:FAKE_AST\nSTATEMENTS\nPos:111 - 171" ];

41 [ label="41:FAKE_AST\nTYPE\nPos:101 - 104" ];

36 [ label="36:FAKE_AST\nTYPE\nPos:94 - 97" ];

 }
 subgraph {
  rank=same;
12 [ label="12:AST_ELEMENT\nMEMBER_SELECT\nPos:21 - 30" ];

46 [ label="46:AST_ELEMENT\nEXPRESSION_STATEMENT\nPos:111 - 157" ];

65 [ label="65:AST_ELEMENT\nRETURN\nPos:160 - 171" ];

42 [ label="42:AST_ELEMENT\nPRIMITIVE_TYPE\nPos:101 - 104" ];

37 [ label="37:AST_ELEMENT\nPRIMITIVE_TYPE\nPos:94 - 97" ];

 }
 subgraph {
  rank=same;
13 [ label="13:FAKE_AST\nEXPRESSION\nPos:21 - 25" ];

47 [ label="47:FAKE_AST\nEXPRESSION\nPos:111 - 156" ];

66 [ label="66:FAKE_AST\nEXPRESSION\nPos:167 - 170" ];

 }
 subgraph {
  rank=same;
48 [ label="48:AST_ELEMENT\nASSIGNMENT\nPos:111 - 156" ];

67 [ label="67:AST_ELEMENT\nPLUS\nPos:167 - 170" ];

 }
 subgraph {
  rank=same;
49 [ label="49:FAKE_AST\nVARIABLE\nPos:111 - 112" ];

51 [ label="51:FAKE_AST\nEXPRESSION\nPos:115 - 156" ];

70 [ label="70:FAKE_AST\nRIGHT_OPERAND\nPos:169 - 170" ];

68 [ label="68:FAKE_AST\nLEFT_OPERAND\nPos:167 - 168" ];

 }
 subgraph {
  rank=same;
52 [ label="52:AST_ELEMENT\nPLUS\nPos:115 - 156" ];

 }
 subgraph {
  rank=same;
53 [ label="53:FAKE_AST\nLEFT_OPERAND\nPos:115 - 116" ];

55 [ label="55:FAKE_AST\nRIGHT_OPERAND\nPos:119 - 156" ];

 }
 subgraph {
  rank=same;
56 [ label="56:AST_ELEMENT\nMETHOD_INVOCATION\nPos:119 - 156" ];

 }
 subgraph {
  rank=same;
57 [ label="57:FAKE_AST\nMETHOD_SELECT\nPos:119 - 154" ];

 }
 subgraph {
  rank=same;
58 [ label="58:AST_ELEMENT\nMEMBER_SELECT\nPos:119 - 154" ];

 }
 subgraph {
  rank=same;
59 [ label="59:FAKE_AST\nEXPRESSION\nPos:119 - 146" ];

 }
 subgraph {
  rank=same;
60 [ label="60:AST_ELEMENT\nMETHOD_INVOCATION\nPos:119 - 146" ];

 }
 subgraph {
  rank=same;
61 [ label="61:FAKE_AST\nMETHOD_SELECT\nPos:119 - 144" ];

 }
 subgraph {
  rank=same;
62 [ label="62:AST_ELEMENT\nMEMBER_SELECT\nPos:119 - 144" ];

 }
 subgraph {
  rank=same;
63 [ label="63:FAKE_AST\nEXPRESSION\nPos:119 - 136" ];

 }
 subgraph {
 }
 subgraph {
125 [ label="125:SYMBOL\njava.util.concurrent\nPos:-1 - -1" ];

126 [ label="126:SYMBOL\njava.util\nPos:-1 - -1" ];

127 [ label="127:SYMBOL\njava\nPos:-1 - -1" ];

128 [ label="128:SYMBOL_TYP\nhdfs.Test\nPos:-1 - -1" ];

132 [ label="132:SYMBOL_VAR\na\nPos:-1 - -1" ];

133 [ label="133:SYMBOL_MTH\nadd(int,int)\nPos:-1 - -1" ];

134 [ label="134:SYMBOL_VAR\na\nPos:-1 - -1" ];

135 [ label="135:SYMBOL_VAR\nb\nPos:-1 - -1" ];

136 [ label="136:SYMBOL_VAR\na\nPos:-1 - -1" ];

137 [ label="137:SYMBOL_VAR\na\nPos:-1 - -1" ];

138 [ label="138:SYMBOL_MTH\nnextInt()\nPos:-1 - -1" ];

139 [ label="139:SYMBOL_MTH\nnextInt()\nPos:-1 - -1" ];

140 [ label="140:SYMBOL_MTH\ncurrent()\nPos:-1 - -1" ];

141 [ label="141:SYMBOL_MTH\ncurrent()\nPos:-1 - -1" ];

142 [ label="142:SYMBOL_TYP\njava.util.concurrent.ThreadLocalRandom\nPos:-1 - -1" ];

143 [ label="143:SYMBOL_VAR\na\nPos:-1 - -1" ];

144 [ label="144:SYMBOL_VAR\nb\nPos:-1 - -1" ];

 }
 subgraph {
  rank=max;
72 [ label="72:TOKEN\nPACKAGE\nPos:0 - 7" ];

73 [ label="73:IDENTIFIER_TOKEN\nhdfs\nPos:8 - 12" , color=blue];

74 [ label="74:TOKEN\nSEMI\nPos:12 - 13" ];

75 [ label="75:TOKEN\nIMPORT\nPos:14 - 20" ];

76 [ label="76:IDENTIFIER_TOKEN\njava\nPos:21 - 25" , color=blue];

77 [ label="77:TOKEN\nDOT\nPos:25 - 26" ];

78 [ label="78:IDENTIFIER_TOKEN\nutil\nPos:26 - 30" , color=blue];

79 [ label="79:TOKEN\nDOT\nPos:30 - 31" ];

80 [ label="80:IDENTIFIER_TOKEN\nconcurrent\nPos:31 - 41" , color=blue];

81 [ label="81:TOKEN\nDOT\nPos:41 - 42" ];

82 [ label="82:TOKEN\nSTAR\nPos:42 - 43" ];

83 [ label="83:TOKEN\nSEMI\nPos:43 - 44" ];

84 [ label="84:TOKEN\nPUBLIC\nPos:46 - 52" ];

85 [ label="85:TOKEN\nCLASS\nPos:53 - 58" ];

86 [ label="86:IDENTIFIER_TOKEN\nTest\nPos:59 - 63" , color=blue];

87 [ label="87:TOKEN\nLBRACE\nPos:64 - 65" ];

88 [ label="88:TOKEN\nint\nPos:67 - 70" ];

89 [ label="89:IDENTIFIER_TOKEN\na\nPos:71 - 72" , color=blue];

90 [ label="90:TOKEN\nEQ\nPos:73 - 74" ];

91 [ label="91:TOKEN\n0\nPos:75 - 76" ];

92 [ label="92:TOKEN\nSEMI\nPos:76 - 77" ];

93 [ label="93:TOKEN\nPUBLIC\nPos:79 - 85" ];

94 [ label="94:TOKEN\nint\nPos:86 - 89" ];

95 [ label="95:IDENTIFIER_TOKEN\nadd\nPos:90 - 93" , color=blue];

96 [ label="96:TOKEN\nLPAREN\nPos:93 - 94" ];

97 [ label="97:TOKEN\nint\nPos:94 - 97" ];

98 [ label="98:IDENTIFIER_TOKEN\na\nPos:98 - 99" , color=blue];

99 [ label="99:TOKEN\nCOMMA\nPos:99 - 100" ];

100 [ label="100:TOKEN\nint\nPos:101 - 104" ];

101 [ label="101:IDENTIFIER_TOKEN\nb\nPos:105 - 106" , color=blue];

102 [ label="102:TOKEN\nRPAREN\nPos:106 - 107" ];

103 [ label="103:TOKEN\nLBRACE\nPos:107 - 108" ];

104 [ label="104:IDENTIFIER_TOKEN\na\nPos:111 - 112" , color=blue];

105 [ label="105:TOKEN\nEQ\nPos:113 - 114" ];

106 [ label="106:IDENTIFIER_TOKEN\na\nPos:115 - 116" , color=blue];

107 [ label="107:TOKEN\nPLUS\nPos:117 - 118" ];

108 [ label="108:IDENTIFIER_TOKEN\nThreadLocalRandom\nPos:119 - 136" , color=blue];

109 [ label="109:TOKEN\nDOT\nPos:136 - 137" ];

110 [ label="110:IDENTIFIER_TOKEN\ncurrent\nPos:137 - 144" , color=blue];

111 [ label="111:TOKEN\nLPAREN\nPos:144 - 145" ];

112 [ label="112:TOKEN\nRPAREN\nPos:145 - 146" ];

113 [ label="113:TOKEN\nDOT\nPos:146 - 147" ];

114 [ label="114:IDENTIFIER_TOKEN\nnextInt\nPos:147 - 154" , color=blue];

115 [ label="115:TOKEN\nLPAREN\nPos:154 - 155" ];

116 [ label="116:TOKEN\nRPAREN\nPos:155 - 156" ];

117 [ label="117:TOKEN\nSEMI\nPos:156 - 157" ];

118 [ label="118:TOKEN\nRETURN\nPos:160 - 166" ];

119 [ label="119:IDENTIFIER_TOKEN\na\nPos:167 - 168" , color=blue];

120 [ label="120:TOKEN\nPLUS\nPos:168 - 169" ];

121 [ label="121:IDENTIFIER_TOKEN\nb\nPos:169 - 170" , color=blue];

122 [ label="122:TOKEN\nSEMI\nPos:170 - 171" ];

123 [ label="123:TOKEN\nRBRACE\nPos:173 - 174" ];

124 [ label="124:TOKEN\nRBRACE\nPos:175 - 176" ];

 }
0 -> 1 [ headport=w, tailport=e];

1 -> 2 [ headport=w, tailport=e];

2 -> 3 [ headport=w, tailport=e];

0 -> 5 [ headport=w, tailport=e];

5 -> 6 [ headport=w, tailport=e];

6 -> 7 [ headport=w, tailport=e];

7 -> 8 [ headport=w, tailport=e];

8 -> 9 [ headport=w, tailport=e];

9 -> 10 [ headport=w, tailport=e];

10 -> 11 [ headport=w, tailport=e];

11 -> 12 [ headport=w, tailport=e];

12 -> 13 [ headport=w, tailport=e];

0 -> 15 [ headport=w, tailport=e];

15 -> 16 [ headport=w, tailport=e];

16 -> 17 [ headport=w, tailport=e];

17 -> 18 [ headport=w, tailport=e];

16 -> 19 [ headport=w, tailport=e];

19 -> 20 [ headport=w, tailport=e];

20 -> 23 [ headport=w, tailport=e];

23 -> 24 [ headport=w, tailport=e];

20 -> 25 [ headport=w, tailport=e];

25 -> 26 [ headport=w, tailport=e];

19 -> 27 [ headport=w, tailport=e];

27 -> 28 [ headport=w, tailport=e];

28 -> 29 [ headport=w, tailport=e];

27 -> 30 [ headport=w, tailport=e];

30 -> 31 [ headport=w, tailport=e];

27 -> 32 [ headport=w, tailport=e];

32 -> 33 [ headport=w, tailport=e];

33 -> 36 [ headport=w, tailport=e];

36 -> 37 [ headport=w, tailport=e];

32 -> 38 [ headport=w, tailport=e];

38 -> 41 [ headport=w, tailport=e];

41 -> 42 [ headport=w, tailport=e];

27 -> 43 [ headport=w, tailport=e];

43 -> 44 [ headport=w, tailport=e];

44 -> 45 [ headport=w, tailport=e];

45 -> 46 [ headport=w, tailport=e];

46 -> 47 [ headport=w, tailport=e];

47 -> 48 [ headport=w, tailport=e];

48 -> 49 [ headport=w, tailport=e];

48 -> 51 [ headport=w, tailport=e];

51 -> 52 [ headport=w, tailport=e];

52 -> 53 [ headport=w, tailport=e];

52 -> 55 [ headport=w, tailport=e];

55 -> 56 [ headport=w, tailport=e];

56 -> 57 [ headport=w, tailport=e];

57 -> 58 [ headport=w, tailport=e];

58 -> 59 [ headport=w, tailport=e];

59 -> 60 [ headport=w, tailport=e];

60 -> 61 [ headport=w, tailport=e];

61 -> 62 [ headport=w, tailport=e];

62 -> 63 [ headport=w, tailport=e];

45 -> 65 [ headport=w, tailport=e];

65 -> 66 [ headport=w, tailport=e];

66 -> 67 [ headport=w, tailport=e];

67 -> 68 [ headport=w, tailport=e];

67 -> 70 [ headport=w, tailport=e];

72 -> 73 [ headport=n, tailport=s, weight=1000];

73 -> 74 [ headport=n, tailport=s, weight=1000];

74 -> 75 [ headport=n, tailport=s, weight=1000];

75 -> 76 [ headport=n, tailport=s, weight=1000];

76 -> 77 [ headport=n, tailport=s, weight=1000];

77 -> 78 [ headport=n, tailport=s, weight=1000];

78 -> 79 [ headport=n, tailport=s, weight=1000];

79 -> 80 [ headport=n, tailport=s, weight=1000];

80 -> 81 [ headport=n, tailport=s, weight=1000];

81 -> 82 [ headport=n, tailport=s, weight=1000];

82 -> 83 [ headport=n, tailport=s, weight=1000];

83 -> 84 [ headport=n, tailport=s, weight=1000];

84 -> 85 [ headport=n, tailport=s, weight=1000];

85 -> 86 [ headport=n, tailport=s, weight=1000];

86 -> 87 [ headport=n, tailport=s, weight=1000];

87 -> 88 [ headport=n, tailport=s, weight=1000];

88 -> 89 [ headport=n, tailport=s, weight=1000];

89 -> 90 [ headport=n, tailport=s, weight=1000];

90 -> 91 [ headport=n, tailport=s, weight=1000];

91 -> 92 [ headport=n, tailport=s, weight=1000];

92 -> 93 [ headport=n, tailport=s, weight=1000];

93 -> 94 [ headport=n, tailport=s, weight=1000];

94 -> 95 [ headport=n, tailport=s, weight=1000];

95 -> 96 [ headport=n, tailport=s, weight=1000];

96 -> 97 [ headport=n, tailport=s, weight=1000];

97 -> 98 [ headport=n, tailport=s, weight=1000];

98 -> 99 [ headport=n, tailport=s, weight=1000];

99 -> 100 [ headport=n, tailport=s, weight=1000];

100 -> 101 [ headport=n, tailport=s, weight=1000];

101 -> 102 [ headport=n, tailport=s, weight=1000];

102 -> 103 [ headport=n, tailport=s, weight=1000];

103 -> 104 [ headport=n, tailport=s, weight=1000];

104 -> 105 [ headport=n, tailport=s, weight=1000];

105 -> 106 [ headport=n, tailport=s, weight=1000];

106 -> 107 [ headport=n, tailport=s, weight=1000];

107 -> 108 [ headport=n, tailport=s, weight=1000];

108 -> 109 [ headport=n, tailport=s, weight=1000];

109 -> 110 [ headport=n, tailport=s, weight=1000];

110 -> 111 [ headport=n, tailport=s, weight=1000];

111 -> 112 [ headport=n, tailport=s, weight=1000];

112 -> 113 [ headport=n, tailport=s, weight=1000];

113 -> 114 [ headport=n, tailport=s, weight=1000];

114 -> 115 [ headport=n, tailport=s, weight=1000];

115 -> 116 [ headport=n, tailport=s, weight=1000];

116 -> 117 [ headport=n, tailport=s, weight=1000];

117 -> 118 [ headport=n, tailport=s, weight=1000];

118 -> 119 [ headport=n, tailport=s, weight=1000];

119 -> 120 [ headport=n, tailport=s, weight=1000];

120 -> 121 [ headport=n, tailport=s, weight=1000];

121 -> 122 [ headport=n, tailport=s, weight=1000];

122 -> 123 [ headport=n, tailport=s, weight=1000];

123 -> 124 [ headport=n, tailport=s, weight=1000];

20 -> 89 [ color=blue];

33 -> 98 [ color=blue];

38 -> 101 [ color=blue];

2 -> 72 [ ];

2 -> 74 [ ];

6 -> 75 [ ];

12 -> 77 [ ];

12 -> 78 [ color=blue];

10 -> 79 [ ];

10 -> 80 [ color=blue];

8 -> 81 [ ];

8 -> 82 [ ];

6 -> 83 [ ];

18 -> 84 [ ];

16 -> 85 [ ];

16 -> 86 [ color=blue];

16 -> 87 [ ];

24 -> 88 [ ];

20 -> 90 [ ];

26 -> 91 [ ];

20 -> 92 [ ];

29 -> 93 [ ];

31 -> 94 [ ];

27 -> 95 [ color=blue];

27 -> 96 [ ];

37 -> 97 [ ];

27 -> 99 [ ];

42 -> 100 [ ];

27 -> 102 [ ];

44 -> 103 [ ];

48 -> 105 [ ];

52 -> 107 [ ];

62 -> 109 [ ];

62 -> 110 [ color=blue];

60 -> 111 [ ];

60 -> 112 [ ];

58 -> 113 [ ];

58 -> 114 [ color=blue];

56 -> 115 [ ];

56 -> 116 [ ];

46 -> 117 [ ];

65 -> 118 [ ];

67 -> 120 [ ];

65 -> 122 [ ];

44 -> 123 [ ];

16 -> 124 [ ];

3 -> 73 [ color=blue];

13 -> 76 [ color=blue];

49 -> 104 [ color=blue];

53 -> 106 [ color=blue];

63 -> 108 [ color=blue];

68 -> 119 [ color=blue];

70 -> 121 [ color=blue];

98 -> 106 [ headport=e, tailport=e, color=red, weight=0];

98 -> 106 [ headport=e, tailport=e, color=green, weight=0];

104 -> 106 [ headport=e, tailport=e, color=purple, weight=0];

98 -> 104 [ headport=w, tailport=w, color=orange, weight=0];

104 -> 106 [ headport=w, tailport=w, color=orange, weight=0];

125 -> 10 [ ];

126 -> 12 [ ];

127 -> 76 [ ];

128 -> 16 [ ];

132 -> 89 [ ];

133 -> 27 [ ];

134 -> 98 [ ];

135 -> 101 [ ];

136 -> 104 [ ];

137 -> 106 [ ];

138 -> 56 [ ];

139 -> 58 [ ];

140 -> 60 [ ];

141 -> 62 [ ];

142 -> 108 [ ];

143 -> 119 [ ];

144 -> 121 [ ];

}
